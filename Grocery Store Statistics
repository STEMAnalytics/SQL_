/*This grocery store database was created after completing Khan Academy, Lesson 1: SQL Basics tutorial.
The data of this project within this database is original by me.  This created grocery store database 
is for the store named Integral Eats.*/

/*Create a table with columns of id of each item, the item itself, the aisle location of each item, the customer_rating of each item, and the expiration date of each item.*/
CREATE TABLE Integral_Eats (id INTEGER PRIMARY KEY, item TEXT, aisle INTEGER, price INTEGER, customer_rating TEXT, expiration_date INTEGER);
INSERT INTO Integral_Eats VALUES
 (1, "avocados",3,7,"good", 2023-06-05);
INSERT INTO Integral_Eats VALUES(2, "Hummus",1,12, "Excellent", 2024-05-23);
INSERT INTO Integral_Eats VALUES(3, "Peaches",3,2,"Good", 2023-06-12);
INSERT INTO Integral_Eats VALUES(4, "Pears",3,7,"Fair", 2023-07-21);
INSERT INTO Integral_Eats VALUES(5, "Granny Smith Apples",3,7,"Good", 2023-06-30);
INSERT INTO Integral_Eats VALUES(6, "Bran muffins",3,7,"Good", 2023-08-22);
INSERT INTO Integral_Eats VALUES(7, "Natureâ€™s Own Wheat Bread",10,1,"Good", 2023-12-23);
INSERT INTO Integral_Eats VALUES(8, "Gava",2,15,"Great",2026-03-01);
INSERT INTO Integral_Eats VALUES(9, "Miracle Whip",8,1,"Not great", 2028-12-15);
INSERT INTO Integral_Eats VALUES(10, "Milk",3,1,"Good", 2023-07-01);
INSERT INTO Integral_Eats VALUES(11, "Walnuts",6,11,"Great",2030-01-01);
INSERT INTO Integral_Eats VALUES(12, "Gouda Cheese",3,4,"Excellent", 2026-01-04);
INSERT INTO Integral_Eats VALUES(13, "LIFE Cereal",6,6,"Fair", 2025-01-08);
INSERT INTO Integral_Eats VALUES(14, "Bagels",5,2,"Great", 2024-08-02);
INSERT INTO Integral_Eats VALUES(15, "Cream Cheese", 1,5, "Delectable",2024-01-15);

/*List all items in store with the items, aisle, location, price listed, and customer review preference.*/ 

SELECT*FROM Integral_Eats;

/*Display the sum of the items per aisle.*/
SELECT aisle, SUM(aisle) FROM Integral_Eats GROUP BY aisle;

/*Display all of the items in the Integral Eats store database.*/
SELECT SUM(aisle) FROM Integral_Eats;

/*Order items that cost $2 or more dollars in ascending order.*/ 
SELECT*FROM Integral_Eats WHERE price >=2 ORDER BY price asc;

/*Create a table within the Integral_Eats Table that only displays the items within the expiration date under five dollars, with the table being renamed Edible_of_the_Eats.*/

SELECT item 
FROM Integral_Eats
AS Edible_of_the_Eats
WHERE expiration_date ="2023-06-06"
AND price <5
ORDER BY price asc;
