/*This grocery store database was created after completing the tutorial through Khan Academy, Lesson 1: SQL Basics tutorial.The data of this project within this database is original by me.  This created grocery store database is for the store named Integral Eats and contains two tables. A demonstration of JOIN with another created table is used after a couple of queries for Table 1 called Integral_Eats. Table 2 is called customer_informatics, which contains data from customers. Such information includes customer order data such as id (where the lower the number the longer the customer has joined Integral Eats, last name, first name, email address, phone number, sum of total orders per customer, the item that customer ordered, the number of said item per order, the number of re-stock requests per customer, manager complaints per customer, and each customer's amount of stock invested in Integral_Eats.*/

/*First, create a table with columns of id of each item, the item itself, the aisle location of each item, the customer_rating of each item, and the expiration date of each item. A key fact to not is using TEXT with the date parentheses returns the full date entered, not just the year.*/

CREATE TABLE Integral_Eats (id INTEGER PRIMARY KEY, 
item TEXT, 
aisle INTEGER, 
price REAL, 
customer_rating TEXT,
expiration_date TEXT);

/*Insert grocery store data into the table called Integral_Eats*/  

INSERT INTO Integral_Eats VALUES
 (1, "Avocadoes",3,7,"good", "2023-06-05");
INSERT INTO Integral_Eats VALUES(2, "Hummus",1,12, "Excellent", "2024-05-23");
INSERT INTO Integral_Eats VALUES(3, "Peaches",3,2,"Good", "2023-06-12");
INSERT INTO Integral_Eats VALUES(4, "Pears",3,7,"Fair", "2023-07-21");
INSERT INTO Integral_Eats VALUES(5, "Granny Smith Apples",3,7,"Good", "2023-06-30");
INSERT INTO Integral_Eats VALUES(6, "Bran muffins",3,7,"Good", "2023-08-22");
INSERT INTO Integral_Eats VALUES(7, "Nature’s Own Wheat Bread",10,1,"Good", "2023-12-23");
INSERT INTO Integral_Eats VALUES(8, "Gava",2,15,"Great","2026-03-01");
INSERT INTO Integral_Eats VALUES(9, "Miracle Whip",8,1,"Not great", "2028-12-15");
INSERT INTO Integral_Eats VALUES(10, "Milk",3,1,"Good", "2023-07-01");
INSERT INTO Integral_Eats VALUES(11, "Walnuts",6,11,"Great","2030-01-01");
INSERT INTO Integral_Eats VALUES(12, "Gouda Cheese",3,4,"Excellent", "2026-01-04");
INSERT INTO Integral_Eats VALUES(13, "LIFE Cereal",6,6,"Fair", "2025-01-08");
INSERT INTO Integral_Eats VALUES(14, "Bagels",5,2,"Great", "2024-08-02");
INSERT INTO Integral_Eats VALUES(15, "Cream Cheese", 1,5, "Delectable","2024-01-15");

/*List all items in store with the items, aisle, location, price listed, and customer review preference.*/ 

SELECT*FROM Integral_Eats;

/*Display the sum of the items per aisle.*/
SELECT aisle, SUM(aisle) FROM Integral_Eats GROUP BY aisle;

/*Display all of the items in the Integral Eats store database.*/
SELECT SUM(aisle) FROM Integral_Eats;

/*Order items that cost $2 or more dollars in ascending order.*/ 
SELECT*FROM Integral_Eats WHERE price >=2 ORDER BY price asc;

/*Create a column within the Integral_Eats Table that further analyzes the expiration dates with a new column in this table called "expiration_status" and distinguishes if the items are edible based off today's date of 2023-08-06 or tells the user to request a re-stock of that item.*/

SELECT item, expiration_date,
CASE 
    WHEN expiration_date > 20230806 THEN     "edible"
    ELSE "expired_request_restock"
    END AS "expiration_status"
    FROM Integral_Eats
    ORDER BY expiration_date asc; 
    
/*This command counts the items that need to be restocked given the date of 2023-08-06 from the above command.*/

SELECT COUNT (*) FROM Integral_Eats
    WHERE expiration_date < "2023-08-06"; 
    
    
/*Create another table called customer_informatics.  This table contains customer order data such as id (where the lower the number the longer the customer has joined Integral Eats, last name, first name, email address, phone number, sum of total orders per customer, the item that customer ordered, the number of said item per order, the number of re-stock requests per customer, manager complaints per customer, and each customer's percentage of coupon use at the grocery store called Integral_Eats.*/

CREATE TABLE customer_informatics (
id INTEGER PRIMARY KEY AUTOINCREMENT,
customer_last_name TEXT,
customer_first_name TEXT,
customer_email TEXT,
customer_phone TEXT,
customer_sum_orders INTEGER,
item TEXT,
customer_each_order_quantity INTEGER,
customer_restock_requests INTEGER,
customer_complaints INTEGER,
customer_complaints_details TEXT,
customer_coupon_use REAL); 

INSERT INTO customer_informatics 
VALUES (1, "Williams", "Samuel", "swilliams5267@gmail.com", "478-313-4211", 7, "Avocadoes", 15, 8, 2, "Long lines", 0.63); 

INSERT INTO customer_informatics 
VALUES (2, "Jones", "William", "jwilliam52@gmail.com", "828-401-5621", 25, "Hummus", 3, 1, 6, "Fair bathroom maintenance",  0.52); 

INSERT INTO customer_informatics 
VALUES (3, "Mathis", "Reginald", "reggie29@comsouth.net", "478-866-6601", 9, "Bagels", 31, 10, 1, "Excellent service",0.13); 

INSERT INTO customer_informatics 
VALUES (4, "Smith", "Barbara", "bbarb897@gmail.com", "478-918-6201", 9, "Gava", 3, 0, 0, NULL, 0.25); 

INSERT INTO customer_informatics 
VALUES (5, "Gonzalez", "Jose", "taconacho52@windstream.net", "478-666-3211", 7, "Walnuts", 2, 8, 3, "Line wait is annoying", 0.52); 

INSERT INTO customer_informatics 
VALUES (6, "Smith", "Pedro", "whyme5387@windstream.net", "478-712-6660", 12, "Milk", 15, 7, 4, "I don't like the music", 0.17); 

INSERT INTO customer_informatics 
VALUES (7, "Chang", "Jannette", "moremuffins57@gmail.com", "478-313-4211", 7, "Bran muffins", 15, 10, 2, "I want more coupons", 0.89); 

INSERT INTO customer_informatics 
VALUES (8, "Canterbery", "Margie", "mmachine62@gmail.com", "478-816-5723", 10, "Granny Smith Apples", 6, 8, 5, "Cashier too young", 0.59); 

INSERT INTO customer_informatics 
VALUES (9, "Williams", "Samuel", "swilliams5267@gmail.com", "478-952-7770", 7, "Avocadoes", 11, 8, 8, "Why are the lines so long", 0.05); 

INSERT INTO customer_informatics 
VALUES (10, "Hill", "Margaret", "teapot57@gmail.com", "801-315-7845", 7, "Avocadoes", 5, 36, 1, "Excellent produce", 0.78); 

INSERT INTO customer_informatics 
VALUES (11, "Hamilton", "Josh", "leonberger24@gmail.com", "776-301-8889", 7, "Nature’s Own Wheat Bread", 15, 8, 2, "I want more healthy bread", 0.56); 

INSERT INTO customer_informatics 
VALUES (12, "Willingham", "Shaquira", "gospelwoman53@comsouth.net", "478-988-7853", 7, "Miracle Whip", 15, 8, 2, "I want more diet Miracle Whip options", 0.25); 

SELECT*FROM customer_informatics;


/*Create a table that pulls data from Table 1 that lists the item, customer rating, customer last name, item that the customer ordered, the number of that item per customer order,  the number of customer complaints, the customer complaint details, and the percentage of customer's coupon use percentage. */

SELECT 
i.item, 
i.customer_rating, 
c.customer_last_name, 
c.customer_first_name, 
c.item, 
c.customer_coupon_use
FROM Integral_Eats i
LEFT OUTER JOIN customer_informatics c
ON i.item = c.item
ORDER BY c.item desc; 

/* Create a command to show the items with over 50-percent coupon use along with the customer reviews.*/

SELECT 
i.item, 
i.customer_rating,
c.item,
c.customer_coupon_use
FROM Integral_Eats i
LEFT OUTER JOIN customer_informatics c
ON i.item = c.item
WHERE c.customer_coupon_use > 0.5; 
