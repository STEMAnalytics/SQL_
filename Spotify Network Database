/* The Spotify Network Database project includes data that I downloaded from
Kaggle. After creating a table, I inserted Spotify data into the
Spotify Network Database. By utilizing data analytics with SQL, I was able to
draw meaningful insights about this database. */


/*Create a table in the Spotifydata database.*/
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

SELECT * FROM BIT_DB.Spotifydata

/*Insert the Spotifydata.csv file into the table.  */
/*Use SQL to explore the data.  */

/*To get an overall synopsis, I analyzed each average popularity, energy, and danceability
in addition to such traits per track. */
SELECT
artist_name
,avg(popularity)
,track_name
,avg(danceability)
,avg(energy)
FROM BIT_DB.Spotifydata
GROUP BY track_name

/*The results are all sorted alphabetically descending per artist, and then by each track of that
artist. Now, to get very specific, I want to rank each artist by average popularity, but limit
the results to 10 artists.*/
SELECT
artist_name
,popularity
,track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10 

/*The most popular artist is Olivia Rodrigo with her
song "good 4 u". Let us look at the specifics of the song
from this database. */


SELECT * FROM BIT_DB.Spotifydata
WHERE track_name = "good 4 u" 


/*Let us compare what other songs have similar aspects to see if Olivia
Rodrigo's artistic flaire is the reason for her number one single, or 
if other factors come into play outside of lyrical characteristics. */

SELECT energy
,song_key
,loudness
,speechiness
,acousticness
,tempo 
,liveness
,valence
,popularity
FROM BIT_DB.Spotifydata
WHERE artist_name LIKE 'O%O'
ORDER BY popularity DESC

/*Just for the artist Olivia Rodrigo,  her most popular
song has a mid-high range tempo, acousticness seems irrelevant,
speechiness is fair, song_key or "pitches" is higher, and the energy is 
moderate.  What seems to be indicators of a popular song are song_key,
acousticness, valence, and speechiness.  Valence is the range of emotions 
within a song.   Let us compare that to other songs and artists.*/

SELECT energy
,song_key
,speechiness
,popularity
,valence
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 50

/*Based off this command alone, it seems that songs with more
 energy and speechiness have a positive correlation with increased 
 popularity.*/

/* Per each artist, list the average danceability?*/
SELECT artist_name
,AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name

/*What is the average danceability per track?*/
SELECT artist_name
,AVG(danceability)
,track_name
,popularity
FROM BIT_DB.Spotifydata
GROUP BY track_name

/*It looks like Ariana Grande's music should be 
played by the DJ!  There is also some correlation
between popularity and danceability, it seems.
Let us look into this!*/

SELECT artist_name
,danceability
,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC

/*We stand corrected, danceability does not have
a direct positive correlation on an artist's popularity!*/

/*Create a command that shows the most popular songs 
with most acousticness and least speechiness.  Let us 
see what the most popular alternative songs are!*/

SELECT 
track_name
,artist_name
,popularity 
,acousticness
,speechiness
FROM BIT_DB.Spotifydata
WHERE speechiness < 0.06
AND acousticness > 0.5

/*The data shows that songs with more acousticness and speechiness
compared to other data within this database have
a higher popularity ranking. */



